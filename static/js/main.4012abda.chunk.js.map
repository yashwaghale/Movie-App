{"version":3,"sources":["component/Header/Header.js","component/card/card.js","component/movielist/movielist.js","pages/Home/home.js","pages/movieDeatils/movie.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","dist","to","src","style","textDecoration","Cards","_ref","movie","_useState","useState","_useState2","Object","slicedToArray","isLoading","setIsLoading","useEffect","setTimeout","Fragment","react_loading_skeleton_dist","color","highlightColor","height","duration","concat","id","poster_path","original_titel","release_date","over_average","overview","slice","MovieList","movieList","setMovieList","type","useParams","getData","fetch","then","res","json","data","results","toUpperCase","map","card_card","Home","popularMovies","setPopularMovies","js","showThumbs","autoPlay","transitionTime","infiniteLoop","showStatus","backdrop_path","original_title","vote_average","movielist_movielist","Movie","currentMovieDetail","setMovie","window","scrollTo","tagline","class","vote_count","runtime","genres","genre","name","homepage","href","target","imdb_id","production_companies","company","logo_path","App","component_Header_Header","react_router_dist","index","element","Home_home","path","pages_movieDeatils_movie","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4012abda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.css'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Header = () =>{\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"headerLeft\">\r\n                <Link to=\"/\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png\" className=\"header_icon\" /></Link>\r\n                <Link to=\"/movies/popular\" style={{textDecoration:\"none\"}}><span>Popular</span></Link>\r\n                <Link to=\"/movies/top_rated\" style={{textDecoration:\"none\"}}><span>Top Rated</span></Link>\r\n                <Link to=\"/movies/upcoming\" style={{textDecoration:\"none\"}}><span>upcoming</span></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React,{useEffect, useState} from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport \"./card.css\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Cards = ({movie}) => {\r\n    \r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1500)\r\n    }, [])\r\n\r\n    return <>\r\n    {\r\n        isLoading\r\n        ?\r\n        <div className=\"cards\">\r\n            <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n                <Skeleton height={300} duration={2} />\r\n            </SkeletonTheme>\r\n        </div>\r\n        :\r\n        <Link to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\r\n            <div className=\"cards\">\r\n                <img className=\"cards_img\" src={`https://image.tmdb.org/t/p/original${movie?movie.poster_path:\"\"}`} />\r\n                <div className=\"cards_overlay\">\r\n                    <div className=\"cards_title\">{movie?movie.original_titel:\"\"}</div>\r\n                        <div className=\"cards_runtime\">\r\n                            {movie?movie.release_date:\"\"}\r\n                            <span className=\"card_rating\">{movie?movie.over_average:\"\"}<i className=\"fas fa-star\"/></span>\r\n                        </div>\r\n                    <div className=\"card_description\">{movie?movie.overview.slice(0,118)+\"...\" : \"\"}</div>\r\n                </div>\r\n            </div>\r\n\r\n           \r\n        </Link>\r\n    }\r\n    </>\r\n}\r\nexport default Cards","import React,{useEffect, useState} from \"react\";\r\nimport \"./movielist.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\nimport Cards from \"../card/card\";\r\n\r\nconst MovieList = () => {\r\n\r\n    const [ movieList, setMovieList ] = useState([])\r\n    const {type} = useParams()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [type])\r\n\r\n    const getData = () => {\r\n        fetch(` https://api.themoviedb.org/3/movie/${type ? type: \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n        .then(res=> res.json())\r\n        .then(data => setMovieList(data.results))\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie_list\">\r\n            <h2 className=\"list_title\"> {(type ? type: \"popular\").toUpperCase()}</h2>\r\n            <div className=\"list_cards\">\r\n                {\r\n                    movieList.map(movie => (\r\n                        <Cards movie={movie} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieList","import React, { useEffect , useState } from \"react\";\r\nimport \"./home.css\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieList from \"../../component/movielist/movielist\";\r\n\r\nconst Home = () => {\r\n\r\n    const[ popularMovies, setPopularMovies ] = useState([])\r\n    useEffect(() => {\r\n\r\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\")\r\n        .then(res=> res.json())\r\n        .then(data => setPopularMovies(data.results))\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"poster\">\r\n                <Carousel\r\n                    showThumbs={false}\r\n                    autoPlay={true}\r\n                    transitionTime={3}\r\n                    infiniteLoop={true}\r\n                    showStatus={false}\r\n                >\r\n                    {\r\n                        popularMovies.map(movie => (\r\n                            <Link style={{textDecoration:\"none\", color:\"white\" }} to ={ `/movie/${movie.id}`}>\r\n                                <div className=\"posterImage\">\r\n                                    <img src={` https://image.tmdb.org/t/p/original${ movie && movie.backdrop_path}`}/>\r\n                                </div>\r\n                                <div className=\"posterImage_overlay\">\r\n                                    <div className=\"posterImage_title\">{movie ? movie.original_title: \"\"}</div>\r\n                                    <div className=\"posterImage_runtime\">\r\n                                        {movie ? movie.release_date: \" \"}\r\n                                        <span className=\"posterImage_rating\">\r\n                                            { movie ? movie.vote_average : \"\"}\r\n                                            <i className=\"fas fa-star\" />{\"\"}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"posterImage_description\">\r\n                                        { movie ? movie.overview : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n                <MovieList/>    \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"./movie.css\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDefaultNormalizer } from \"@testing-library/react\";\r\n\r\nconst Movie = () => {\r\n    const [ currentMovieDetail, setMovie] = useState()\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        window.scrollTo(0,0)\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        fetch(` https://api.themoviedb.org/3/movie/${id}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n        .then(res=> res.json())\r\n        .then(data => setMovie(data))\r\n    }\r\n\r\n    return(\r\n        <div className=\"movie\">\r\n        <div className=\"movie_intro\">\r\n            <img className=\"movie_backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\r\n        </div>\r\n        <div className=\"movie_detail\">\r\n            <div className=\"movie_detailLeft\">\r\n                <div className=\"movie_posterBox\">\r\n                    <img className=\"movie_poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\r\n                </div>\r\n            </div>\r\n            <div className=\"movie_detailRight\">\r\n                <div className=\"movie_detailRightTop\">\r\n                    <div className=\"movie_name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\r\n                    <div className=\"movie_tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\r\n                    <div className=\"movie_rating\">\r\n                        {currentMovieDetail ? currentMovieDetail.vote_average: \"\"} <i class=\"fas fa-star\" />\r\n                        <span className=\"movie_voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\r\n                    </div>  \r\n                    <div className=\"movie_runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\r\n                    <div className=\"movie_releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\r\n                    <div className=\"movie_genres\">\r\n                        {\r\n                            currentMovieDetail && currentMovieDetail.genres\r\n                            ? \r\n                            currentMovieDetail.genres.map(genre => (\r\n                                <><span className=\"movie_genre\" id={genre.id}>{genre.name}</span></>\r\n                            )) \r\n                            : \r\n                            \"\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"movie_detailRightBottom\">\r\n                    <div className=\"synopsisText\">Synopsis</div>\r\n                    <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <div className=\"movie_links\">\r\n            <div className=\"movie_heading\">Useful Links</div>\r\n            {\r\n                currentMovieDetail && currentMovieDetail.homepage && <a href={currentMovieDetail.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n            }\r\n            {\r\n                currentMovieDetail && currentMovieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\r\n            }\r\n        </div>\r\n        <div className=\"movie_heading\">Production companies</div>\r\n        <div className=\"movie_production\">\r\n            {\r\n                currentMovieDetail && currentMovieDetail.production_companies && currentMovieDetail.production_companies.map(company => (\r\n                    <>\r\n                        {\r\n                            company.logo_path \r\n                            && \r\n                            <span className=\"productionCompanyImage\">\r\n                                <img className=\"movie_productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path} />\r\n                                <span>{company.name}</span>\r\n                            </span>\r\n                        }\r\n                    </>\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Movie","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './component/Header/Header';\nimport Home from './pages/Home/home';\nimport MovieList from './component/movielist/movielist';\nimport Movie from './pages/movieDeatils/movie';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <Routes>\n          <Route index element={<Home/>}></Route>\n          <Route path=\"movie/:id\" element={<Movie/>}></Route>  \n          <Route path=\"movies/:type\" element={ <MovieList/>}></Route>  \n          <Route path=\"/*\" element={<h1>Eror Page</h1>}></Route> \n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}